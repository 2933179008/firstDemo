<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tbl.modules.handheldInterface.dao.MovePositionInterfaceDAO">
    <!--根据物料编号，批次号，库位编号删除该条数据-->
    <delete id="deleteStock">
        delete from stock
        where material_code=#{materialCode}
        and batch_no=#{batchNo}
        and position_code=#{formerPositionCode}
        and material_type = 1
    </delete>

    <!--根据rfid查询绑定的物料-->
    <select id="getMaterialBundingDetail" resultType="java.util.Map">
        select a.*
        from materiel_bind_rfid_detail a
        inner join materiel_bind_rfid b on a.materiel_bind_rfid_by=b.id
        where b.rfid=#{rfid}
        and b.deleted_flag='1'
        and b.status='1'
    </select>

    <!--根据库位编号分组，获取库存表中该库位上的所有物料种类的物料重量和托盘库存数量-->
    <select id="getStockInfo" resultType="java.util.Map">
        select sum(stock_weight) as stock_weight_sum,sum(stock_rfid_amount) as stock_rfid_amount_sum
        from stock
        where position_code=#{positionCode}
        and material_type = 1
        group by position_code
    </select>

    <!--根据物料编号和库位编号查询该库位中该物料的批次号-->
    <select id="getStockBatchNo" resultType="java.lang.String">
        select distinct batch_no
        from stock
        where material_code= #{materialCode}
        and position_code = #{positionCode}
        and material_type = 1
    </select>

    <!--根据库位编号获取库存中库位的物料编号和批次号-->
    <select id="getStockMaterialCodeAndBatchNo" resultType="java.util.Map">
        select distinct material_code as materialCode,batch_no as batchNo
        from stock
        where position_code=#{positionCode}
        and material_code = 1
    </select>

    <!--查询该rfid是否可用-->
    <select id="getSelectAvailableRfid" resultType="java.lang.Integer">
        select count(1)
        from stock
        where material_code=#{materialCode}
        and batch_no = #{batchNo}
        and position_code = #{formerpositionCode}
        and available_rfid like concat(concat('%', #{rfid}), '%')
    </select>

    <!--更新移库表的库位编码和其他字段-->
    <update id="updateMovePositionById">
        update move_position
        set complete_time=now(),status='2'
        where id = #{movePositionId}
    </update>

    <!--根据rfid获取绑定表id和绑定详情表id-->
    <select id="selectMaterialBundingByRfid" resultType="java.util.Map">
        select a.id as materielBindId,a.bind_code,b.id as materielBindDetailId,b.materiel_code,b.materiel_name,b.batch_rule,b.amount,b.weight
        from materiel_bind_rfid a
        inner join materiel_bind_rfid_detail b on a.id=b.materiel_bind_rfid_by
        where a.rfid=#{rfid}
        and b.delete_flag='1'
    </select>

    <!--根据移库表的id查询原库位主键id和库位编号-->
    <select id="selectFormerPosition" resultType="java.util.Map">
        select b.id,b.position_code,a.rfid
        from move_position a
        inner join base_depot_position b on a.former_position=b.id
        where a.id=#{movePositionId}
    </select>

    <!--减去原库位的库存-->
    <update id="updateStockFormerPosition">
        update stock
        set stock_amount=stock_amount-#{amount},
                available_stock_amount=available_stock_amount-#{amount},
                stock_weight=stock_weight-#{weight},
                available_stock_weight=available_stock_weight-#{weight},
                stock_rfid_amount=stock_rfid_amount-1,
                available_stock_rfid_amount=available_stock_rfid_amount-1,
                rfid=if(rfid!=#{rfid},if(rfid like concat(#{rfid}, ',%'),REPLACE(rfid,concat(#{rfid}, ','),''),REPLACE(rfid,concat(',',#{rfid}),'')),''),
                available_rfid=if(available_rfid!=#{rfid},if(available_rfid like concat(#{rfid}, ',%'),REPLACE(available_rfid,concat(#{rfid}, ','),''),REPLACE(available_rfid,concat(',',#{rfid}),'')),'')
        where material_code=#{materialCode}
        and batch_no=#{batchNo}
        and position_code=#{formerPositionCode}
        and material_type=1
    </update>

    <!--根据物料编号、批次号、库位编号查询库存中是否存在该条数据-->
    <select id="selectStockPositionCount" resultType="java.lang.Integer">
        select count(1)
        from stock
        where material_code=#{materialCode}
        and batch_no=#{batchNo}
        and position_code=#{positionCode}
         and material_type = 1
    </select>

    <!--查询库存数量和重量-->
    <select id="selectStockAmountAndWeight" resultType="java.util.Map">
        select stock_amount,stock_weight,product_date,customer_code
        from stock
        where material_code=#{materialCode}
        and batch_no=#{batchNo}
        and position_code=#{formerPositionCode}
         and material_type = 1
    </select>

    <!--插入现库位的库存-->
    <insert id="insertStockCurrentPosition">
        insert into stock(material_type,material_code,material_name,batch_no,position_code,position_name,stock_amount,available_stock_amount,stock_weight,available_stock_weight,stock_rfid_amount,available_stock_rfid_amount,rfid,available_rfid,create_time,create_by,update_time,product_date,customer_code)
        values(1,#{materialCode},#{materialName},#{batchNo},#{positionCode},#{positionName},#{amount},#{amount},#{weight},#{weight},1,1,#{rfid},#{rfid},now(),#{userId},now(),#{productDate},#{customerCode})
    </insert>

    <!--更新绑定表库位id-->
    <update id="updateMaterialBundingPosition">
        update materiel_bind_rfid
        set position_by=#{positionId}
        where id=#{materielBindId}
    </update>

    <!--更新绑定详情表库位id-->
    <update id="updateMaterialBundingDetailPosition">
        <foreach collection="lstMaterielBindDetailId" item="materielBindDetailId" index="index" separator=";" open="" close="">
            update materiel_bind_rfid_detail
            set position_id=#{positionId}
            where id=#{materielBindDetailId}
        </foreach>
    </update>

    <!--更新现库位的库存-->
    <update id="updateStockCurrentPosition">
        update stock
        set stock_amount=stock_amount+#{amount},
                available_stock_amount=available_stock_amount+#{amount},
                stock_weight=stock_weight+#{weight},
                available_stock_weight=available_stock_weight+#{weight},
                stock_rfid_amount=stock_rfid_amount+1,
                available_stock_rfid_amount=available_stock_rfid_amount+1,
                rfid=if(rfid is null,#{rfid},CONCAT(rfid,',',#{rfid})),
                available_rfid=if(available_rfid is null,#{rfid},CONCAT(available_rfid,',',#{rfid}))
        where material_code=#{materialCode}
        and batch_no=#{batchNo}
        and position_code=#{positionCode}
         and material_type = 1
    </update>

</mapper>