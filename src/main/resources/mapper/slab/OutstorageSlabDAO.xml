<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tbl.modules.slab.dao.OutStorageSlabDAO">



    <select id = "getPagePutBillList" resultType="com.tbl.modules.outstorage.entity.LowerShelfBillVO">
        SELECT lsb.id id,lsb.lower_shelf_bill_code lowerShelfBillCode,lsb.outstorage_bill_code outstorageBillCode,lsb.position_code positionCode,lsb.state,lsb.lower_shelf_time lowerShelfTime,
          bc.customer_name customerCode,su.username userId
          FROM lower_shelf_bill lsb
          left join base_customer bc on bc.customer_code = lsb.customer_code
          left join sys_user su on su.user_id = lsb.user_id
          where 1=1 and lsb.user_id = #{userId} and state !=2
    </select>

    <!--判断对应的userIP是否已经存在上、 -->
    <select id = "getUserIpCount" resultType="java.lang.Integer">
        select count(1) from slab_operate_type where user_ip = #{ip}
    </select>

    <!-- 插入数值-->
    <select id = "insertMap" resultType="java.lang.Void">
        insert into slab_operate_type(user_ip,operate_type,create_time,update_time) values(#{userIp},#{operate_type},#{create_time},#{update_time})
    </select>

    <!-- 更新数值-->
    <select id = "updateMap" resultType="java.lang.Void">
        update slab_operate_type set operate_type=#{operate_type},update_time=#{update_time} where user_ip = #{userIp}
    </select>

    <select id = "getIpCount" resultType="java.lang.Integer">
        select count(1) from slab_lower_bunding where user_ip = #{ip}
    </select>

    <!-- 更新绑定表中的数值-->
    <select id = "updateSlabOutBillBunding" resultType="java.lang.Void">
        update slab_lower_bunding set user_id =#{user_id},lower_id=#{lowerId},update_time=#{update_time} where user_ip=#{user_ip}
    </select>

    <!-- 插入绑定表中的数值-->
    <select id = "insertSlabOutBillBunding" resultType="java.lang.Void">
        insert into slab_lower_bunding(user_id,user_ip,lower_id,create_time,update_time) values(#{user_id},#{user_ip},#{lowerId},#{create_time},#{update_time})
    </select>

    <!-- 更新下架单状态为进行中-->
    <select id = "updateLowerState" resultType="java.lang.Void">
        update lower_shelf_bill set state = 1 where id = #{lowerId} and state = 0
    </select>

    <!-- 更新下架单详情状态为进行中-->
    <select id = "updateLowerDetailState" resultType="java.lang.Void">
        update lower_shelf_bill_detail set state = 1 where lower_shelf_bill_id = #{lowerId} and state = 0
    </select>

    <!-- 通过userIP获取当前正在下架的任务-->
    <select id = "getTaskMap" resultType="java.util.Map">
        select slb.* ,lsb.state from slab_lower_bunding slb LEFT JOIN lower_shelf_bill lsb ON lsb.id = slb.lower_id where user_ip = #{userIp}
    </select>

    <!-- 通过userIP获取当前正在下架的任务-->
    <select id = "getOutStorageId" resultType="java.lang.Object">
        select outstorage_bill_id from lower_shelf_bill where id = #{lowerId}
    </select>


    <!-- 通过下架单以及rfid 编号判断当前的rfid 是否在任务中存在-->
    <select id = "getLowerTask" resultType="java.lang.Integer">
        select count(1) from lower_shelf_bill_detail where lower_shelf_bill_id = #{lowerId} and rfid = #{rfid} and state = 1
    </select>

    <!-- 更新绑定关系-->
    <select id = "updateSlabOutBillBundingByKey" resultType="java.lang.Void">
        update slab_lower_bunding set alert_key=#{alertKey},alert_value=#{alertValue},update_time=#{time},rfid=#{slabRfid} where user_ip = #{userIP}
    </select>

    <!-- 获取详情数值-->
    <select id = "getLowerDetailId" resultType="java.lang.Object">
        select id from lower_shelf_bill_detail where lower_shelf_bill_id = #{lower_id} and rfid like concat(concat('%', #{rfid}), '%') and state = 1
    </select>

    <!-- 通过userIP获取可用的rfid-->
    <select id = "avliableRfid" resultType="java.util.Map">
        select lower_id,avilable_rfid,alert_key from slab_lower_bunding where user_ip = #{userIp}
    </select>

    <!-- 通过userIP获取可用的rfid-->
    <select id = "removeRfid" resultType="java.lang.Object">
        update slab_lower_bunding set rfid = null where user_ip = #{userIp}
    </select>



    <!-- 通过rfid获取绑定表中的数值-->
    <select id = "rfidBind" resultType="java.util.Map">
        select batch_rule,occupy_stock_weight,position_id from materiel_bind_rfid_detail where rfid = #{rfid} and outstorage_bill_code =#{outStorageId} and status = 1
    </select>

    <!-- 通过批次号及重量判断数值是否存在-->
    <select id = "isExist" resultType="java.lang.Integer">
        select rfid from lower_shelf_bill_detail where state!=2 and lower_shelf_bill_id = #{lowerId} batch_no = #{batch_no} and  weight = #{weight}
    </select>

    <!-- 更新下架单详情中的数值-->
    <select id = "updateRfid" resultType="java.lang.Void">
        update lower_shelf_bill_detail set rfid = #{rfid},position_code=#{positionId} where state!=2 and lower_shelf_bill_id = #{lowerId} batch_no = #{batch_no} and  weight = #{weight} and rfid = #{oldRfid}
    </select>

    <!-- 更新物料绑定表中的数值-->
    <select id = "removeMaterial" resultType="java.lang.Void">
        update materiel_bind_rfid_detail set occupy_stock_amount=null,occupy_stock_weight=null,outstorage_bill_code=null where rfid like concat(concat('%', #{rfid}), '%') and  outstorage_bill_code = #{outStorageId}
    </select>

    <!-- 移出库存中的绑定关系-->
    <select id = "removeStock" resultType="java.lang.Void">
        update stock set occupy_stock_amount=null,occupy_stock_weight=null,outstorage_bill_code=null where available_rfid like concat(concat('%', #{rfid}), '%') and  outstorage_bill_code = #{outStorageId}
    </select>

    <!-- 通过id获取对应的单据的可用的rfid 编号-->
    <select id = "getRfid" resultType="java.lang.Object">
        select avilable_rfid from slab_lower_bunding where id = #{id}
    </select>

    <!-- 通过id获取对应的单据的可用的rfid 编号-->
    <select id = "updateAvilabledRfid" resultType="java.lang.Integer">
        update slab_lower_bunding set avilable_rfid = #{avilabledRfid},alert_key=2 where id = #{id}
    </select>

    <!-- 通过id获取对应的单据的可用的rfid 编号-->
    <select id = "getMaterialMap" resultType="java.util.Map">
        select materiel_code,materiel_name,occupy_stock_amount,occupy_stock_weight,position_id,amount,weight from materiel_bind_rfid_detail where rfid = #{rfid} and outstorage_bill_code=(select outstorage_bill_code  from lower_shelf_bill where id = #{lowerId})
    </select>

    <!-- 通过id获取对应的单据的可用的rfid编号-->
    <select id = "getArfid" resultType="java.lang.Object">
        select rfid from slab_lower_bunding where id = #{id}
    </select>



















</mapper>