<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tbl.modules.outstorage.dao.LowerShelfDAO">

    <!--判断对应的出库单是否已经生成下架单 -->
    <select id="getDtailCount" resultType="java.lang.Integer">
        select count(1) from lower_shelf_bill where outstorage_bill_id = #{id}
    </select>

    <!--获取列表分页 -->
    <select id="selectLowerShelfList" resultType="com.tbl.modules.outstorage.entity.LowerShelfBillVO">
        SELECT lsb.id id,lsb.lower_shelf_bill_code lowerShelfBillCode,lsb.outstorage_bill_code outstorageBillCode,lsb.position_code positionCode,lsb.state,lsb.lower_shelf_time lowerShelfTime,
          bc.customer_name customerCode,su.username userId
          FROM lower_shelf_bill lsb
          left join base_customer bc on bc.customer_code = lsb.customer_code
          left join sys_user su on su.user_id = lsb.user_id
          where 1=1
        <if test=" lowerShelfBillCode!= null and lowerShelfBillCode.trim() != ''">
            AND lsb.lower_shelf_bill_code like concat(concat('%', #{lowerShelfBillCode}), '%')
        </if>

        <if test=" outstorageBillCode!= null and outstorageBillCode.trim() != ''">
            AND lsb.outstorage_bill_code like concat(concat('%', #{outstorageBillCode}), '%')
        </if>
    </select>

    <!--判断对应的出库单是否已经生成下架单 -->
    <select id="getLowerShelfVO" resultType="com.tbl.modules.outstorage.entity.LowerShelfBillVO">
        select lsb.id id,lsb.lower_shelf_bill_code lowerShelfBillCode,lsb.outstorage_bill_code outstorageBillCode,lsb.position_code positionCode,lsb.state,lsb.lower_shelf_time lowerShelfTime,
          bc.customer_name customerCode,lsb.user_id userId
          from lower_shelf_bill lsb
          left join base_customer bc on bc.customer_code = lsb.customer_code
        where 1 = 1 and lsb.id = #{id}
    </select>

    <!-- 将对应的可用的单据中的rfid进行更新-->
    <select id="updateOutStorageSlab" resultType="java.lang.Object">
        update slab_lower_bunding set avilable_rfid = REPLACE(avilable_rfid,#{rfid},''),avilable_rfid = REPLACE(avilable_rfid,',','') where lower_id = #{lowerId}
    </select>


    <!--判断下架单是否已经完成 -->
    <select id="outStorageCount" resultType="java.lang.Integer">
        select count(1) from lower_shelf_bill where state!=2 and outstorage_bill_id = #{outStorageId}
    </select>

    <select id="getUserList" resultType="java.util.Map">
        select user_id id,username from sys_user where 1=1
    </select>

    <!--更新操作人 -->
    <select id="updateOperation" resultType="java.lang.Boolean">
        update lower_shelf_bill set user_id = #{userId} where id = #{lowerId}
    </select>

    <!--通过userId获取对应的下架单的任务 -->
    <select id="lowerInterfaceList" resultType="java.util.Map">
        SELECT lsb.id id,lsb.lower_shelf_bill_code lowerShelfBillCode,lsb.outstorage_bill_code outstorageBillCode,lsb.position_code positionCode,lsb.state,lsb.lower_shelf_time lowerShelfTime,
          bc.customer_name customerCode,su.username userId
          FROM lower_shelf_bill lsb
          left join base_customer bc on bc.customer_code = lsb.customer_code
          left join sys_user su on su.user_id = lsb.user_id
          where 1=1 and  lsb.bill_type = 1 and (lsb.user_id = #{userId} or (lsb.user_id is null or lsb.user_id=''))  and state!=2 order by lsb.create_time asc
    </select>

    <!--更新出库单的状态 -->
    <select id="updateOutStorageState" resultType="java.lang.Object">
        update outstorage_bill set state = 2 where id = #{outStorageId}
    </select>







</mapper>